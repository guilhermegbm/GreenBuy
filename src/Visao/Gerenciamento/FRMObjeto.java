/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao.Gerenciamento;

import Visao.Cadastro.FRMCadastrarObjeto;
import Controle.ControleObjeto;
import Modelo.BEAN.Objeto;
import Visao.Edicao.FRMEditarObjeto;
import java.awt.Color;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Guilherme
 */
public class FRMObjeto extends javax.swing.JFrame {

    private DefaultTableModel dTable;
    List<Objeto> dados;

    /**
     * Creates new form FRMFornecedor
     */
    public FRMObjeto() {
        initComponents();

        try {
            dados = ControleObjeto.listarTodosAtivos();
            this.preencheTabela();
        } catch (RuntimeException e) {
            JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
        }

        this.preencheTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableObjeto = new javax.swing.JTable();
        btnCadastrar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnInativar = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btnLocalizar = new javax.swing.JButton();
        cbOpc = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        tfDado = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Produtos");

        jPanel3.setBackground(new java.awt.Color(153, 255, 153));

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Todos os produtos cadastrados"));

        tableObjeto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tableObjeto);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Visao.icon/prodAdd.png"))); // NOI18N
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Visao.icon/prodEditar.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnInativar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Visao.icon/prodDel.png"))); // NOI18N
        btnInativar.setText("Inativar");
        btnInativar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInativarActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Visao.icon/logout.png"))); // NOI18N
        jButton4.setText("Voltar");

        btnLocalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Visao.icon/prodLoc.png"))); // NOI18N
        btnLocalizar.setText("Localizar");
        btnLocalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocalizarActionPerformed(evt);
            }
        });

        cbOpc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Listar apenas ativos", "Código", "Nome", "(A partir) Preço de venda", "(Até)Preço de venda", "(A partir) Preço de compra", "(Até)Preço de compra", "Listar apenas produtos", "Listar apenas mercadorias", "Listar apenas inativos" }));
        cbOpc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbOpcActionPerformed(evt);
            }
        });

        jLabel1.setText("Localizar objeto por:");

        tfDado.setForeground(new java.awt.Color(153, 153, 153));
        tfDado.setText("Insira o dado para pesquisa...");
        tfDado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfDadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfDadoFocusLost(evt);
            }
        });
        tfDado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfDadoActionPerformed(evt);
            }
        });
        tfDado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfDadoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbOpc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(tfDado, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnLocalizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCadastrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInativar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbOpc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLocalizar)
                    .addComponent(tfDado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(btnCadastrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnInativar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 184, Short.MAX_VALUE)
                        .addComponent(jButton4)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        FRMCadastrarObjeto cadObj = new FRMCadastrarObjeto();

        cadObj.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void cbOpcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbOpcActionPerformed
        if (cbOpc.getSelectedIndex() == 0) {
            try {
                dados = ControleObjeto.listarTodosAtivos();
                this.preencheTabela();
            } catch (RuntimeException e) {
                JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
            }
        } else if (cbOpc.getSelectedIndex() == 7) {
            try {
                dados = ControleObjeto.listarTodosProdutos();
                this.preencheTabela();
            } catch (RuntimeException e) {
                JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
            }
        } else if (cbOpc.getSelectedIndex() == 8) {
            try {
                dados = ControleObjeto.listarTodosMercadorias();
                this.preencheTabela();
            } catch (RuntimeException e) {
                JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
            }
        } else if (cbOpc.getSelectedIndex() == 9) {
            try {
                dados = ControleObjeto.listarTodosInativos();
                this.preencheTabela();
            } catch (RuntimeException e) {
                JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
            }
        }
    }//GEN-LAST:event_cbOpcActionPerformed

    private void tfDadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDadoActionPerformed
        this.localizar();
    }//GEN-LAST:event_tfDadoActionPerformed

    private void tfDadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfDadoFocusGained
        if (tfDado.getText().equals("Insira o dado para pesquisa...")) {
            tfDado.setText("");
            tfDado.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_tfDadoFocusGained

    private void tfDadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfDadoFocusLost
        if (tfDado.getText().equals("")) {
            tfDado.setForeground(Color.GRAY);
            tfDado.setText("Insira o dado para pesquisa...");
        }
    }//GEN-LAST:event_tfDadoFocusLost

    private void btnLocalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocalizarActionPerformed
        this.localizar();
    }//GEN-LAST:event_btnLocalizarActionPerformed

    private void btnInativarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInativarActionPerformed
        int qnt = tableObjeto.getSelectedColumnCount();

        if (qnt < 1) {
            JOptionPane.showMessageDialog(null, "Selecione um ítem da lista ao lado para deletar.");
        } else if (qnt > 1) {
            JOptionPane.showMessageDialog(null, "Apenas um ítem da lista deve ser selecionado por vez;");
        } else {

            if (dados.get(tableObjeto.getSelectedRow()).getSituacaoObj().equals(Objeto.SituacaoObj.INATIVO)) {
                JOptionPane.showMessageDialog(null, "Este objeto já está inativado.");
            } else {
                int opc = JOptionPane.showConfirmDialog(null, "Deseja realmente inativar o objeto " + dados.get(tableObjeto.getSelectedRow()).getNome() + " ?");

                if (opc == 0) {
                    try {
                        ControleObjeto.inativaObjeto(dados.get(tableObjeto.getSelectedRow()));
                        dados = ControleObjeto.listarTodosAtivos();
                        cbOpc.setSelectedIndex(0);
                        this.preencheTabela();
                    } catch (RuntimeException e) {
                        JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
                    }

                }
            }
        }
    }//GEN-LAST:event_btnInativarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        int qnt = tableObjeto.getSelectedRowCount();

        if (qnt < 1) {
            JOptionPane.showMessageDialog(null, "Selecione um ítem da lista ao lado para editar.");
        } else if (qnt > 1) {
            JOptionPane.showMessageDialog(null, "Apenas um ítem da lista deve ser selecionado por vez.");
        } else {
            FRMEditarObjeto edtObj = new FRMEditarObjeto();

            edtObj.pegaObjeto(dados.get(tableObjeto.getSelectedRow()));

            edtObj.setVisible(true);

            this.setVisible(false);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void tfDadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfDadoKeyTyped

    }//GEN-LAST:event_tfDadoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FRMObjeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FRMObjeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FRMObjeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FRMObjeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FRMObjeto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnInativar;
    private javax.swing.JButton btnLocalizar;
    private javax.swing.JComboBox<String> cbOpc;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableObjeto;
    private javax.swing.JTextField tfDado;
    // End of variables declaration//GEN-END:variables

    private void preencheTabela() {
        dTable = criaTabela();

        dTable.addColumn("Código");
        dTable.addColumn("Nome");
        dTable.addColumn("Preço de venda");
        dTable.addColumn("Preço de compra");
        dTable.addColumn("Tipo");
        dTable.addColumn("Sub-grupo");
        dTable.addColumn("Unidade");
        dTable.addColumn("Situação");

        for (Objeto dado : dados) {

            String tipo = "";

            if (dado.getTipoObj().equals(Objeto.TipoObjeto.PRODUTO)) {
                tipo = "Produto";
            } else if (dado.getTipoObj().equals(Objeto.TipoObjeto.MERCADORIA)) {
                tipo = "Mercadoria";
            }

            String situacao = "";

            if (dado.getSituacaoObj().equals(Objeto.SituacaoObj.ATIVO)) {
                situacao = "Ativo";
            } else if (dado.getSituacaoObj().equals(Objeto.SituacaoObj.INATIVO)) {
                situacao = "Inativo";
            }

            dTable.addRow(new Object[]{dado.getCodigo(), dado.getNome(),
                dado.getPrecoVendaBase(), dado.getPrecoCompraBase(), tipo,
                dado.getSubGrupo().getNome(), dado.getUnidade(), situacao});
        }

        tableObjeto.setModel(dTable);
    }

    private DefaultTableModel criaTabela() {

        DefaultTableModel dTable = new DefaultTableModel() {
            //Define o tipo dos campos (coluna) na mesma ordem que as colunas foram criadas
            Class[] types = new Class[]{
                java.lang.Integer.class, //codigo
                java.lang.String.class, //nome
                java.lang.Float.class, //preço de venda
                java.lang.Float.class, //preço de compra
                java.lang.String.class, //tipo (Prod ou mer)
                java.lang.String.class, //sub-grupo
                java.lang.String.class, //unidade
                java.lang.String.class //situação
            };
            //define se os campos podem ser editados na propria tabela
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        ;

        };
        //retorna o DefaultTableModel
    return dTable;
    }

    private void localizar() {
        if ((tfDado.getText().equals("")) || (tfDado.getText().equals("Insira o dado para pesquisa..."))) {
            JOptionPane.showMessageDialog(null, "Insira algum dado para pesquisa.");
        } else {
            if (cbOpc.getSelectedIndex() == 1) {
                try {
                    dados = ControleObjeto.listarObjetoPorCodigo(Integer.parseInt(tfDado.getText()));
                    this.preencheTabela();
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Atenção: para pesquisa por código, insira apenas números.");
                } catch (RuntimeException e) {
                    JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
                }

            } else if (cbOpc.getSelectedIndex() == 2) {
                try {
                    dados = ControleObjeto.listarPorNome(tfDado.getText());
                    this.preencheTabela();
                } catch (RuntimeException e) {
                    JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
                }
            } else if (cbOpc.getSelectedIndex() == 3) {
                String texto = tfDado.getText();

                if (texto.contains(",")) {
                    String partes[] = texto.split(",");
                    String parte1 = partes[0];
                    String parte2 = partes[1];
                    texto = parte1 + "." + parte2;
                }
                try {
                    dados = ControleObjeto.listarPorValorVendaMenor(Float.parseFloat(texto));
                    this.preencheTabela();
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Atenção: para pesquisa por valores, insira apenas números.");
                } catch (RuntimeException e) {
                    JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
                }

            } else if (cbOpc.getSelectedIndex() == 4) {
                String texto = tfDado.getText();

                if (texto.contains(",")) {
                    String partes[] = texto.split(",");
                    String parte1 = partes[0];
                    String parte2 = partes[1];
                    texto = parte1 + "." + parte2;
                }
                try {
                    dados = ControleObjeto.listarPorValorVendaMaior(Float.parseFloat(texto));
                    this.preencheTabela();
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Atenção: para pesquisa por valores, insira apenas números.");
                } catch (RuntimeException e) {
                    JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
                }
            } else if (cbOpc.getSelectedIndex() == 5) {
                String texto = tfDado.getText();

                if (texto.contains(",")) {
                    String partes[] = texto.split(",");
                    String parte1 = partes[0];
                    String parte2 = partes[1];
                    texto = parte1 + "." + parte2;
                }
                try {
                    dados = ControleObjeto.listarPorValorCompraMenor(Float.parseFloat(texto));
                    this.preencheTabela();
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Atenção: para pesquisa por valores, insira apenas números.");
                } catch (RuntimeException e) {
                    JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
                }
            } else if (cbOpc.getSelectedIndex() == 6) {
                String texto = tfDado.getText();

                if (texto.contains(",")) {
                    String partes[] = texto.split(",");
                    String parte1 = partes[0];
                    String parte2 = partes[1];
                    texto = parte1 + "." + parte2;
                }
                try {
                    dados = ControleObjeto.listarPorValorCompraMaior(Float.parseFloat(texto));
                    this.preencheTabela();
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Atenção: para pesquisa por valores, insira apenas números.");
                } catch (RuntimeException e) {
                    JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
                }
            }
        }
    }
}
