/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao.Outros;

import Controle.ControleFuncionario;
import Controle.ControleObjeto;
import Modelo.BEAN.Funcionario;
import Modelo.BEAN.Objeto;
import Modelo.BEAN.ObjetoVenda;
import Modelo.BEAN.Venda;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Guilherme
 */
public class FRMVenda extends javax.swing.JFrame {

    private List<Objeto> objetosListados;
    private Objeto objetoSelecionado;
    private List<ObjetoVenda> itensNaVenda;
    private Venda venda;

    /**
     * Creates new form FRMVenda
     */
    public FRMVenda() {
        initComponents();
        venda = new Venda();
        objetoSelecionado = null;
        itensNaVenda = new ArrayList<>();
        try {
            objetosListados = ControleObjeto.listarTodosAtivos();
            this.preencheTabelaPesquisa();
        } catch (RuntimeException e) {
            JOptionPane.showMessageDialog(null, "Deu ruium: " + e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbOpc = new javax.swing.JComboBox<>();
        tfDado = new javax.swing.JTextField();
        btnLocalizar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableItens = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        btnFinalizar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePesquisa = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tfPreco = new javax.swing.JTextField();
        tfQuant = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnInserirItem = new javax.swing.JButton();
        cbAlterar = new javax.swing.JCheckBox();
        lblImg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Realizar Venda");
        setBackground(new java.awt.Color(153, 255, 255));

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Localizar objeto por:");

        cbOpc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Listar todos", "Código", "Nome", "(A partir) Preço de venda", "(Até)Preço de venda", "Listar apenas produtos", "Listar apenas mercadorias" }));
        cbOpc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbOpcActionPerformed(evt);
            }
        });

        tfDado.setForeground(new java.awt.Color(153, 153, 153));
        tfDado.setText("Insira o dado para pesquisa...");
        tfDado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfDadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfDadoFocusLost(evt);
            }
        });
        tfDado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfDadoActionPerformed(evt);
            }
        });
        tfDado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfDadoKeyTyped(evt);
            }
        });

        btnLocalizar.setText("Localizar");
        btnLocalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbOpc, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfDado, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLocalizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfDado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbOpc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnLocalizar))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Objetos já inseridos"));

        tableItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableItens.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableItensMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableItens);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(204, 255, 204));
        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Total");

        lblTotal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7))
        );

        jPanel6.setBackground(new java.awt.Color(204, 255, 204));
        jPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Visao.icon/FinalVenda.png"))); // NOI18N
        btnFinalizar.setText("Finalizar");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Visao.icon/logout.png"))); // NOI18N
        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Visao.icon/TiraProduto.png"))); // NOI18N
        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFinalizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnVoltar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRemover)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                .addComponent(btnFinalizar)
                .addGap(18, 18, 18)
                .addComponent(btnVoltar)
                .addGap(16, 16, 16))
        );

        jPanel4.setBackground(new java.awt.Color(204, 255, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Escolha o objeto"));

        tablePesquisa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablePesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePesquisaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablePesquisa);

        jLabel5.setText("Código:");

        jLabel7.setText("Nome:");

        jLabel9.setText("Preço de venda:");

        tfPreco.setEnabled(false);
        tfPreco.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfPrecoFocusGained(evt);
            }
        });
        tfPreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPrecoActionPerformed(evt);
            }
        });
        tfPreco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfPrecoKeyTyped(evt);
            }
        });

        tfQuant.setForeground(new java.awt.Color(153, 153, 153));
        tfQuant.setText("Insira a quantidade...");
        tfQuant.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfQuantFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfQuantFocusLost(evt);
            }
        });
        tfQuant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfQuantActionPerformed(evt);
            }
        });
        tfQuant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfQuantKeyTyped(evt);
            }
        });

        jLabel2.setText("Quantidade:");

        btnInserirItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Visao.icon/addProduto.png"))); // NOI18N
        btnInserirItem.setText("Inserir");
        btnInserirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirItemActionPerformed(evt);
            }
        });
        btnInserirItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                btnInserirItemKeyTyped(evt);
            }
        });

        cbAlterar.setBackground(new java.awt.Color(204, 255, 204));
        cbAlterar.setText("Alterar nesta venda");
        cbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAlterarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfQuant, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGap(10, 10, 10)
                        .addComponent(lblNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnInserirItem, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCodigo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(jLabel7)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(tfQuant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(tfPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbAlterar))
                        .addGap(34, 34, 34)
                        .addComponent(btnInserirItem))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfQuantFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfQuantFocusGained
        if (tfQuant.getText().equals("Insira a quantidade...")) {
            tfQuant.setText("");
            tfQuant.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_tfQuantFocusGained

    private void tfQuantFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfQuantFocusLost
        if (tfQuant.getText().equals("")) {
            tfQuant.setText("Insira a quantidade...");
            tfQuant.setForeground(Color.GRAY);
        } else {
            String qtde = tfQuant.getText();

            if (qtde.contains(",")) {
                String[] parts = qtde.split(",");
                String part1 = parts[0];
                String part2 = parts[1];
                qtde = part1 + "." + part2;
            }

            if ((objetoSelecionado != null) && (objetoSelecionado.getTipoObj().equals(Objeto.TipoObjeto.MERCADORIA)) && (Float.parseFloat(qtde) > objetoSelecionado.getQtdeEstoque())) {
                lblImg.setVisible(true);
                lblImg.setToolTipText("Quantidade excede estoque!");
                URL url = getClass().getResource("/Visao.icon/warning.png");
                ImageIcon icon = new ImageIcon(url);
                lblImg.setIcon(icon);
            } else {
                lblImg.setVisible(false);
            }
        }
    }//GEN-LAST:event_tfQuantFocusLost

    private void btnInserirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirItemActionPerformed
        this.inserirItem();
    }//GEN-LAST:event_btnInserirItemActionPerformed

    private void tfQuantKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfQuantKeyTyped
        String caracteres = "0987654321.,";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_tfQuantKeyTyped

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
        if (itensNaVenda.size() == 0) {
            JOptionPane.showMessageDialog(null, "Insira ao menos um item.");

        } else {

            Funcionario f = new Funcionario();
            f.setCodigo(2);
            ControleFuncionario.setFuncionarioLogado(f);

            FRMFinalizarVenda fim = new FRMFinalizarVenda();

            venda.setItensDaVenda(itensNaVenda);

            fim.pegaVenda(venda);

            fim.setVisible(true);

            this.dispose();
        }
    }//GEN-LAST:event_btnFinalizarActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        FRMPrincipal principal = new FRMPrincipal();
        principal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void cbOpcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbOpcActionPerformed
        if (cbOpc.getSelectedIndex() == 0) {
            try {
                objetosListados = ControleObjeto.listarTodosAtivos();
                this.preencheTabelaPesquisa();
                this.verificaTabelaPesquisa();
            } catch (RuntimeException e) {
                JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
            }
        } else if (cbOpc.getSelectedIndex() == 5) {
            try {
                objetosListados = ControleObjeto.listarTodosProdutosAtivos();
                this.preencheTabelaPesquisa();
                this.verificaTabelaPesquisa();
            } catch (RuntimeException e) {
                JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
            }
        } else if (cbOpc.getSelectedIndex() == 6) {
            try {
                objetosListados = ControleObjeto.listarTodosMercadoriasEAtivos();
                this.preencheTabelaPesquisa();
                this.verificaTabelaPesquisa();
            } catch (RuntimeException e) {
                JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
            }
        }
    }//GEN-LAST:event_cbOpcActionPerformed

    private void tfDadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfDadoFocusGained
        if (tfDado.getText().equals("Insira o dado para pesquisa...")) {
            tfDado.setText("");
            tfDado.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_tfDadoFocusGained

    private void tfDadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfDadoFocusLost
        if (tfDado.getText().equals("")) {
            tfDado.setForeground(Color.GRAY);
            tfDado.setText("Insira o dado para pesquisa...");
        }
    }//GEN-LAST:event_tfDadoFocusLost

    private void tfDadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDadoActionPerformed
        this.localizar();
    }//GEN-LAST:event_tfDadoActionPerformed

    private void tfDadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfDadoKeyTyped

    }//GEN-LAST:event_tfDadoKeyTyped

    private void cbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAlterarActionPerformed
        tfPreco.setEnabled(cbAlterar.isSelected());

        if (objetoSelecionado != null) {
            if (!cbAlterar.isSelected()) {
                tfPreco.setText(objetoSelecionado.getPrecoVendaBase() + "");
            }
        }
    }//GEN-LAST:event_cbAlterarActionPerformed

    private void tfQuantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfQuantActionPerformed
        if (cbAlterar.isSelected()){
            tfPreco.requestFocusInWindow();
        } else {
            this.inserirItem();
        }
    }//GEN-LAST:event_tfQuantActionPerformed

    private void btnLocalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocalizarActionPerformed
        this.localizar();
    }//GEN-LAST:event_btnLocalizarActionPerformed

    private void tablePesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePesquisaMouseClicked
        int qnt = tablePesquisa.getSelectedColumnCount();

        if (qnt < 1) {

        } else if (qnt > 1) {

        } else {
            objetoSelecionado = objetosListados.get(tablePesquisa.getSelectedRow());
            this.preencheDados();
        }
    }//GEN-LAST:event_tablePesquisaMouseClicked

    private void tfPrecoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfPrecoFocusGained
        tfPreco.selectAll();
    }//GEN-LAST:event_tfPrecoFocusGained

    private void tfPrecoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPrecoKeyTyped
        String caracteres = "0987654321.,";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_tfPrecoKeyTyped

    private void tableItensMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableItensMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableItensMouseClicked

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        int qnt = tableItens.getSelectedRowCount();

        if (qnt < 1) {
            JOptionPane.showMessageDialog(null, "Selecione um ítem da lista ao lado para remover.");
        } else if (qnt > 1) {
            JOptionPane.showMessageDialog(null, "Apenas um ítem da lista deve ser selecionado por vez.");
        } else {
            ObjetoVenda ov = itensNaVenda.get(tableItens.getSelectedRow());
            itensNaVenda.remove(ov);
            this.preencheTabelaItens();
            this.calculaTotal();
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnInserirItemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnInserirItemKeyTyped

    }//GEN-LAST:event_btnInserirItemKeyTyped

    private void tfPrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPrecoActionPerformed
        this.inserirItem();
    }//GEN-LAST:event_tfPrecoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FRMVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FRMVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FRMVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FRMVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FRMVenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnInserirItem;
    private javax.swing.JButton btnLocalizar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JCheckBox cbAlterar;
    private javax.swing.JComboBox<String> cbOpc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblImg;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tableItens;
    private javax.swing.JTable tablePesquisa;
    private javax.swing.JTextField tfDado;
    private javax.swing.JTextField tfPreco;
    private javax.swing.JTextField tfQuant;
    // End of variables declaration//GEN-END:variables

    private void localizar() {
        if ((tfDado.getText().equals("")) || (tfDado.getText().equals("Insira o dado para pesquisa..."))) {
            JOptionPane.showMessageDialog(null, "Insira algum dado para pesquisa.");
        } else {
            if (cbOpc.getSelectedIndex() == 1) {
                try {
                    objetosListados = ControleObjeto.listarObjetoPorCodigoEAtivo(Integer.parseInt(tfDado.getText()));
                    this.preencheTabelaPesquisa();
                    this.verificaTabelaPesquisa();
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Atenção: para pesquisa por código, insira apenas números.");
                } catch (RuntimeException e) {
                    JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
                }

            } else if (cbOpc.getSelectedIndex() == 2) {
                try {
                    objetosListados = ControleObjeto.listarPorNomeEAtivo(tfDado.getText());
                    this.preencheTabelaPesquisa();
                    this.verificaTabelaPesquisa();
                } catch (RuntimeException e) {
                    JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
                }
            } else if (cbOpc.getSelectedIndex() == 3) {
                String texto = tfDado.getText();

                if (texto.contains(",")) {
                    String partes[] = texto.split(",");
                    String parte1 = partes[0];
                    String parte2 = partes[1];
                    texto = parte1 + "." + parte2;
                }
                try {
                    objetosListados = ControleObjeto.listarPorValorVendaMenorEAtivo(Float.parseFloat(texto));
                    this.preencheTabelaPesquisa();
                    this.verificaTabelaPesquisa();
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Atenção: para pesquisa por valores, insira apenas números.");
                } catch (RuntimeException e) {
                    JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
                }

            } else if (cbOpc.getSelectedIndex() == 4) {
                String texto = tfDado.getText();

                if (texto.contains(",")) {
                    String partes[] = texto.split(",");
                    String parte1 = partes[0];
                    String parte2 = partes[1];
                    texto = parte1 + "." + parte2;
                }
                try {
                    objetosListados = ControleObjeto.listarPorValorVendaMaiorEAtivo(Float.parseFloat(texto));
                    this.preencheTabelaPesquisa();
                    this.verificaTabelaPesquisa();
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Atenção: para pesquisa por valores, insira apenas números.");
                } catch (RuntimeException e) {
                    JOptionPane.showMessageDialog(null, "Deu ruim: " + e);
                }
            }
        }
    }

    private void preencheTabelaPesquisa() {
        DefaultTableModel dtm = this.criaTabelaPesquisa();

        dtm.addColumn("Código");
        dtm.addColumn("Nome:");
        dtm.addColumn("Preço de venda:");

        for (Objeto objL : objetosListados) {
            dtm.addRow(new Object[]{objL.getCodigo(), objL.getNome(), objL.getPrecoVendaBase()});
        }

        tablePesquisa.setModel(dtm);

    }

    private void verificaTabelaPesquisa() {
        if (tablePesquisa.getRowCount() == 1) {
            objetoSelecionado = objetosListados.get(0);
            this.preencheDados();
        }
    }

    private DefaultTableModel criaTabelaPesquisa() {
        DefaultTableModel dTable = new DefaultTableModel() {
            //Define o tipo dos campos (coluna) na mesma ordem que as colunas foram criadas
            Class[] types = new Class[]{
                java.lang.Integer.class, //codigo
                java.lang.String.class, //nome
                java.lang.Float.class, //preço de venda
            };

            boolean[] canEdit = new boolean[]{
                false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        ;

        };
        
    return dTable;
    }

    private void preencheDados() {
        lblCodigo.setText(objetoSelecionado.getCodigo() + "");
        lblNome.setText(objetoSelecionado.getNome());
        tfPreco.setText(objetoSelecionado.getPrecoVendaBase() + "");

        tfQuant.requestFocusInWindow();
        tfQuant.setText("1");
        tfQuant.setForeground(Color.BLACK);
        tfQuant.selectAll();

        lblImg.setVisible(false);

        cbAlterar.setSelected(true);
        cbAlterar.doClick();
    }

    private void preencheTabelaItens() {
        DefaultTableModel dtm = this.criaTabelaItens();

        dtm.addColumn("Código");
        dtm.addColumn("Nome");
        dtm.addColumn("Preço praticado");
        dtm.addColumn("Quantidade");
        dtm.addColumn("Sub-total");

        for (ObjetoVenda ov : itensNaVenda) {
            dtm.addRow(new Object[]{ov.getObjeto().getCodigo(), ov.getObjeto().getNome(), ov.getPrecoVendaPraticadoUnidade(),
                ov.getQtdeVendida(), (ov.getPrecoVendaPraticadoUnidade() * ov.getQtdeVendida())});
        }

        tableItens.setModel(dtm);
    }

    private DefaultTableModel criaTabelaItens() {
        DefaultTableModel dTable = new DefaultTableModel() {

            Class[] types = new Class[]{
                java.lang.Integer.class, //codigo
                java.lang.String.class, //nome
                java.lang.Float.class, //preço praticado
                java.lang.Float.class, //QtdeVendida
                java.lang.Float.class //Sub-total
            };

            boolean[] canEdit = new boolean[]{
                false, false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        ;

        };
        return dTable;
    }

    private boolean itemJaInserido(ObjetoVenda ov) {
        for (ObjetoVenda objVen : itensNaVenda) {
            if (objVen.getObjeto().getCodigo() == ov.getObjeto().getCodigo()) {
                return true;
            }
        }
        return false;
    }

    private void calculaTotal() {
        float valorTotal = 0;
        for (ObjetoVenda objetoVenda : itensNaVenda) {
            valorTotal += (objetoVenda.getPrecoVendaPraticadoUnidade() * objetoVenda.getQtdeVendida());
        }

        lblTotal.setText(valorTotal + "");
    }

    void pegaVenda(Venda venda) {
        this.venda = venda;

        this.itensNaVenda = venda.getItensDaVenda();

        this.preencheTabelaItens();
        this.calculaTotal();
    }

    private void inserirItem() {
        if (objetoSelecionado == null) {
            JOptionPane.showMessageDialog(null, "Selecione um objeto ao lado.");
        } else {
            if (tfPreco.getText().equals("") || (tfQuant.getText().equals("Insira a quantidade..."))) {
                JOptionPane.showMessageDialog(null, "Todos os dados devem ser preenchidos");
            } else {

                ObjetoVenda ov = new ObjetoVenda();

                ov.setObjeto(objetoSelecionado);
                ov.setVenda(venda);

                String qtde = tfQuant.getText();

                if (qtde.contains(",")) {
                    String[] parts = qtde.split(",");
                    String part1 = parts[0];
                    String part2 = parts[1];
                    qtde = part1 + "." + part2;
                }

                ov.setQtdeVendida(Float.parseFloat(qtde));

                String precoPraticado = tfPreco.getText();

                if (precoPraticado.contains(",")) {
                    String[] parts = precoPraticado.split(",");
                    String part1 = parts[0];
                    String part2 = parts[1];
                    precoPraticado = part1 + "." + part2;
                }

                ov.setPrecoVendaPraticadoUnidade(Float.parseFloat(precoPraticado));

                if (!this.itemJaInserido(ov)) {
                    itensNaVenda.add(ov);
                    this.preencheTabelaItens();
                } else {
                    Object[] opcoes = {"Substituir", "Acrescentar quantidade", "Cancelar"};
                    int opc = JOptionPane.showOptionDialog(null, "Item já inserido! O que deseja fazer?",
                            "Atenção", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoes, opcoes[0]);

                    if (opc == 0) {
                        for (ObjetoVenda item : itensNaVenda) {
                            if (item.getObjeto().getCodigo() == ov.getObjeto().getCodigo()) {
                                item.setPrecoVendaPraticadoUnidade(ov.getPrecoVendaPraticadoUnidade());
                                item.setQtdeVendida(ov.getQtdeVendida());
                                this.preencheTabelaItens();
                            }
                        }
                    } else if (opc == 1) {
                        for (ObjetoVenda item : itensNaVenda) {
                            if (item.getObjeto().getCodigo() == ov.getObjeto().getCodigo()) {
                                item.setQtdeVendida(item.getQtdeVendida() + ov.getQtdeVendida());
                                this.preencheTabelaItens();
                            }
                        }
                    } else if (opc == 2) {

                    }
                }

                cbAlterar.setSelected(false);

                tfDado.setText("");
                tfDado.requestFocusInWindow();

                tfQuant.setText("Insira a quantidade...");
                tfQuant.setForeground(Color.GRAY);

                tfPreco.setText("");
                tfPreco.setEnabled(false);

                lblImg.setVisible(false);
                lblCodigo.setText("");
                lblNome.setText("");

                objetoSelecionado = null;

                cbOpc.setSelectedIndex(0);

                try {
                    objetosListados = ControleObjeto.listarTodosAtivos();
                } catch (RuntimeException e) {
                    JOptionPane.showMessageDialog(null, "Deu ruium: " + e);
                }

                this.calculaTotal();
            }
        }
    }
}
